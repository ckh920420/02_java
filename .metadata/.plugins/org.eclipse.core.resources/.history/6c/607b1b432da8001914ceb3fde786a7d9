package accunttwo;
/**
 * 은행계좌를 정의하는 클래스
 * ----------------------------------
 * 계좌의 속성을 나타내기 위하여 두 개의 맴버 변수 선언
 * 계좌번호 : accNumber
 * 잔약     : balance
 * --------------------------------------------
 * 기본 생성자 : 매개 변수가 비어있는 생성자
 * 매개변수가 있는 생성자 : 매개변수 목록이 있는 생성자
 * -------------------------------------
 * 계좌의 잔액을 증가시키는 입금 메소드 : deposit(int amount)
 * 계좌의 현재 상태를 출력하는 메소드 : print()
 * 
 * @author Administrator
 *
 */

public class Account {
	// 1. 멤버변수 (실체 변수) 선언부
	/** 게좌번호 */
	int accNumber;
	
	/** 게좌잔액*/
	int balance;
	
	// 2. 생성자 선언부 
	/** 
	 * 기본 생성자 : 클래스 이름과 대소문자까지 모두 동일하고 
	 *             매개변수 목록이 비어있는 생성자
	 */
	Account() {
		
	}
	/**
	 * 계좌 번호, 계좌 잔액을 매개변수로 받아서 일벽된 값으로 계좌를 실체화(초기화) 하는  중복 정의된 생성자
	 * @param newAccNumber
	 * @param newBalance
	 */
	Account(int newAccNumber, int newBalance) {
		accNumber = newAccNumber;
	    balance = newBalance;
		
	}
	/** 
	 * 문자열로 된 계좌 번호와 정수값의 잔액을 입력받아서
	 * 각각 계좌번호(accNumber) 와 잔액(balance) 필드를 초기화 하는 
	 * 중복정의 된 생성자
	 * 
	 * 중복정의(Overloading)
	 * ---------------------
	 * 메소드의 이름은 같고, 매개변수 목록이 다른 메소드를 
	 * 정의하는 기법
	 * 중복정의는 생성자에도 적용되는 정의기법
	 * 
	 * 매개변수 목록이 다르다는 의미
	 * (1) 갯수가 다르다
	 * (2) 갯수가 같을 떄는 매개변수의 타입의 순서가 다르다
	 * 
	 * 
	 * @param strAccNumber
	 * @param newBalance
	 */
	
	//(이 자리는 강사님 깃을 보고 내용이 추가되어야할 자리입니다
	// 이 자리에 올 내용은 생성자에 다른 타입을 넣는 방법을 기입하는 자리입니다
	
	
	// 3. 메소드 선언부
	/** 입력된 amount 만큼 이 계좌의 잔액을 증가시킨다
	 * @param amount : int 입금할 금액
	 */
	public void deposit (int amount ){
		balance += amount;
	}
	/**계좌의 현재상태 출력*/
	public void print() {
		System.out.printf("계좌번호 :%d | \t 계좌잔액 : %d%n", accNumber, balance);
	}

	/** 
	 * 출금하는 메소드
	 * 
	 * 출금하려는 금액(amount) 만큼 잔액에서 차감하는 메소드
	 * 
	 * 만약 잔액이amount 보다 적으면  출금을 진행하지 않는다
	 * 
	 * 출금에 실패하면 "돈없으면 집에가서 빈대떡이나 부쳐먹지" 라는 문자열을 리턴
	 * 
	 * 출금에 성공하면 " 옛다 받아라. 잔액은 얼마입니다" 라는 문자를 리턴
	 * 
	 * @param amount : int 출금하려는 금액
	 * @return String 출금 성공 실패 알림
	 */
}
public String withdraw(int amount ) {
	String result;
	
	if (balance >= amount ) {
		balance -= amount;
		result = amount + " 를 옛다 받아라  남은돈 + balance+ 이다");
		
		
		
	}
}

